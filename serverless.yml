service: sls-static-api
useDotenv: true

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  logRetentionInDays: 7
  versionFunctions: false
  timeout: 6
  logs:
    restApi:
      level: ERROR
  apiGateway:
    metrics: true
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - SQS:SendMessage
          Resource:
            - 'Fn::GetAtt': [PriceLoaderQueue, Arn]
        - Effect: Allow
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - 'Fn::GetAtt': [PropertiesMonthlyTable, Arn]
  environment:
    STAGE: ${opt:stage, 'dev'}
    BROKALYS_API_URL: ${env:BROKALYS_API_URL}
    BROKALYS_API_GATEWAY_KEY: ${env:BROKALYS_API_GATEWAY_KEY}
    CACHE_DYNAMODB_TABLE_NAME: ${self:custom.cacheDynamoTableName}

functions:
  # Public API
  api-monthly-stats:
    handler: src/api/monthly-stats.run
    events:
      - http:
          path: /stats/monthly
          method: get
          cors: true

  # Async price loader for given criteria
  price-loader:
    handler: src/async-operations/price-loader.run
    reservedConcurrency: 10
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PriceLoaderQueue
              - Arn
          batchSize: 1
      - sqs:
          arn:
            Fn::GetAtt:
              - PriceLoaderQueue
              - Arn
          batchSize: 1
      - sqs:
          arn:
            Fn::GetAtt:
              - PriceLoaderQueue
              - Arn
          batchSize: 1
      - sqs:
          arn:
            Fn::GetAtt:
              - PriceLoaderQueue
              - Arn
          batchSize: 1
      - sqs:
          arn:
            Fn::GetAtt:
              - PriceLoaderQueue
              - Arn
          batchSize: 1

plugins:
  - serverless-domain-manager
  - serverless-webpack
  - serverless-layers

custom:
  cacheDynamoTableName: ${self:provider.stage}-properties-monthly-cache

  customDomain:
    domainName: static-api.brokalys.com
    stage: prod
    certificateName: '*.brokalys.com'
    createRoute53Record: true
    endpointType: edge

  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: false
    packager: yarn

  serverless-layers:
    packageManager: yarn
    dependenciesPath: ./package.json
    layersDeploymentBucket: brokalys-lambda-layers
    customInstallationCommand: yarn install --production --ignore-scripts

resources:
  Resources:
    PriceLoaderQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-price-loader.fifo
        FifoQueue: true
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt PriceLoaderDeadLetterQueue.Arn
          maxReceiveCount: 3
    PriceLoaderDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-price-loader-dlq.fifo
        FifoQueue: true

    PropertiesMonthlyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.cacheDynamoTableName}
        AttributeDefinitions:
          - AttributeName: hash
            AttributeType: S
        KeySchema:
          - AttributeName: hash
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
